name: Release
on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Parse version info from tag
      run: |
        # GITHUB_REF is like refs/tags/v2.3.5, so strip the first 11 chars
        VERSION=${GITHUB_REF:11}
        MAJOR=$(echo "$VERSION" | cut -d . -f 1)
        MINOR=$(echo "$VERSION" | cut -d . -f 2)
        PATCH=$(echo "$VERSION" | cut -d . -f 3)
        echo "version=$VERSION" >> $GITHUB_ENV
        echo "version_major=$MAJOR" >> $GITHUB_ENV
        echo "version_minor=$MINOR" >> $GITHUB_ENV
        echo "version_patch=$PATCH" >> $GITHUB_ENV
    - name: Build and push Docker image
      run: |
        IMG_BASE="ghcr.io/${{ github.repository,, }}" # github.repository,, for bash 4+ lowercase
        
        echo "Building Docker image with base: ${IMG_BASE}, Version: ${{ env.VERSION_NUMBER }}"
        
        docker build \
        --tag "${IMG_BASE}:${{ env.VERSION_NUMBER }}" \
        --tag "${IMG_BASE}:${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.latest" \
        --tag "${IMG_BASE}:${{ env.VERSION_MAJOR }}.latest" \
        --tag "${IMG_BASE}:latest" \
        .
        
        echo "Pushing Docker images to ${IMG_BASE}..."
        docker push --all-tags "${IMG_BASE}"
        echo "Docker images pushed successfully."

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: Release ${{ env.TAG_NAME }}
        body: |
          Automated release for version **${{ env.TAG_NAME }}**.
          
          Docker images have been pushed to `ghcr.io/${{ github.repository,, }}` with the following tags:
          - `${{ env.VERSION_NUMBER }}`
          - `${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}.latest`
          - `${{ env.VERSION_MAJOR }}.latest`
          - `latest`
        draft: false
        prerelease: false